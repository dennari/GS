<local:GardenViewBase
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:command="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
	xmlns:local="clr-namespace:Growthstories.UI.WindowsPhone"
	xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:telerikPrimitives="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Primitives"
    xmlns:telerikCore="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Core"
	xmlns:toolkitPrimitives="clr-namespace:Microsoft.Phone.Controls.Primitives;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:c4f="clr-namespace:Coding4Fun.Toolkit.Controls;assembly=Coding4Fun.Toolkit.Controls"
    xmlns:c4fBinding="clr-namespace:Coding4Fun.Toolkit.Controls.Binding;assembly=Coding4Fun.Toolkit.Controls"
    d:DataContext="{StaticResource GardenViewModelDesign}"
    x:Class="Growthstories.UI.WindowsPhone.GardenView"
    mc:Ignorable="d">
    <UserControl.Resources>

        <DataTemplate x:Key="C4fTile">

            <StackPanel>
                   
                <c4f:Tile 
                        HorizontalAlignment="Left"
                        Margin="0, 0"
                        Width="190"
                        Height="190"
                        c4fBinding:FrameworkElementBinding.ClipToBounds="True"
                        Command="{Binding DataContext.ShowDetailsCommand, ElementName=PlantsSelector}"
                        CommandParameter="{Binding}">
                <Grid>
                    <Grid.Triggers>
                        <EventTrigger RoutedEvent="Canvas.Loaded" >
                            <BeginStoryboard>
                                <Storyboard 
						x:Name="trexStoryboard" 
						AutoReverse="True" 
						RepeatBehavior="Forever">
                                    <DoubleAnimationUsingKeyFrames 
							Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)"
							Storyboard.TargetName="Img">
                                        <SplineDoubleKeyFrame KeyTime="0:0:1"/>
                                        <SplineDoubleKeyFrame KeyTime="0:0:30" Value="-198"/>
                                        <SplineDoubleKeyFrame KeyTime="0:1:0" Value="-198" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames 
							Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
							Storyboard.TargetName="Img">
                                        <SplineDoubleKeyFrame KeyTime="0:0:1"/>
                                        <SplineDoubleKeyFrame KeyTime="0:0:30"/>
                                        <SplineDoubleKeyFrame KeyTime="0:1:0" Value="-198"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Grid.Triggers>
                    <Canvas>
                        <Image
                            x:Name="Img"
                            Width="396" Height="396"
	        		        Source="{Binding Photo, ConverterParameter=396x396, Converter={StaticResource PhotoToImageSource}}" 
                            Stretch="UniformToFill">
                            <Image.RenderTransform>
                                <CompositeTransform/>
                            </Image.RenderTransform>
                        </Image>
                    </Canvas>
                    <c4f:TileNotification
                        HorizontalAlignment="Left"
                            Padding="18,0"
                            Background="{StaticResource GSAccentBrush}"
                            Content="{Binding WateringScheduler.Missed}"
                            Visibility="{Binding WateringScheduler.MissedLate, Converter={StaticResource BooleanToVisibility}, FallbackValue=Collapsed}" 
                        />

                        <Border BorderThickness="3" IsHitTestVisible="False">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="WhiteSmoke"/>
                            </Border.BorderBrush>
                        </Border>
                    </Grid>
                
                <toolkit:ContextMenuService.ContextMenu>
                    <toolkit:ContextMenu>
                        <toolkit:MenuItem Header="Water" 
                                              Command="{Binding MultiWateringCommand}"
                                              CommandParameter="{Binding}"/>
                        <toolkit:MenuItem Header="Edit" 
                                              Command="{Binding EditCommand}"
                                              CommandParameter="{Binding}"/>
                        <toolkit:MenuItem Header="Delete" 
                                              Command="{Binding MultiDeleteCommand}"
                                              CommandParameter="{Binding}"/>

                    </toolkit:ContextMenu>
                </toolkit:ContextMenuService.ContextMenu>
            </c4f:Tile>

                
            <TextBlock 
               Style="{StaticResource GSTextBlockStyle}"
               Text="{Binding Name, Converter={StaticResource ToUpperOrLowerCase}}" HorizontalAlignment="Left"
               VerticalAlignment="Top" Margin="0,8,0,0"
               FontWeight="Bold"              
                FontSize="18"
                Foreground="WhiteSmoke"
            />

             <TextBlock 
               Style="{StaticResource GSTextBlockStyle}"
               Text="{Binding Species}" HorizontalAlignment="Left"
               VerticalAlignment="Top" Margin="0,-2,0,0"
               FontWeight="Normal"              
               FontSize="18"
               Foreground="WhiteSmoke"
            />


            </StackPanel>

        </DataTemplate>


        <Style x:Key="TileSelectionStyle2" TargetType="toolkit:LongListMultiSelectorItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="toolkit:LongListMultiSelectorItem">
                        <Border x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TransparentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentContainer"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectionTriangle">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectionCheck">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="HasSelectionStates">
                                    <VisualState x:Name="Opened">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectionRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="OuterCover">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Closed"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="1" >
                                <ContentControl x:Name="ContentContainer"
									Margin="3"
    								ContentTemplate="{TemplateBinding ContentTemplate}"
    								Content="{TemplateBinding Content}"
    								Foreground="{TemplateBinding Foreground}"
    								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
    								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
									/>
                                <Rectangle x:Name="SelectionRectangle" Visibility="Collapsed"
                                           Stroke="{StaticResource GSAccentBrush}" StrokeThickness="2" MaxHeight="200"  VerticalAlignment="Top" />
                                <Polyline x:Name="SelectionTriangle" Visibility="Collapsed"
									HorizontalAlignment="Right" VerticalAlignment="Top"
                                    Points="50,0 50,50 0,0"
								    Fill="{StaticResource GSAccentBrush}"
								/>
                                <Polyline x:Name="SelectionCheck" Visibility="Collapsed"
                                    Margin="5" HorizontalAlignment="Right" VerticalAlignment="Top"
								    Points="40,0 43,3 28,18 18,8 21,5 28,12"
								    Fill="{StaticResource PhoneForegroundBrush}"
									/>
                                <Grid x:Name="OuterCover" IsHitTestVisible="True" Visibility="Collapsed" Background="Transparent" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </UserControl.Resources>


        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>          
        
        <StackPanel>
            <TextBlock 
            Style="{StaticResource GSPlaceholderTextBlockStyle}"
            Text="You don't have any plants yet." 
            FontWeight="Bold"
            Margin="6,0,0,24"
            Width="400"
            Visibility="{Binding Plants.Count, Converter={StaticResource ZeroToVisibility}}"
            />

            <TextBlock 
            Style="{StaticResource GSPlaceholderTextBlockStyle}"
            Text="Add your first plant by using the application bar at the bottom." 
            VerticalAlignment="Top" Grid.Row="1" Margin="6,0,0,0"
            Width="400"
            FontSize="24"
            Visibility="{Binding Plants.Count, Converter={StaticResource ZeroToVisibility}}"
        />
        </StackPanel>
        
        <toolkit:LongListMultiSelector
		    x:Name="PlantsSelector"
		    ItemsSource="{Binding Plants}"
		    ItemTemplate="{StaticResource C4fTile}"
            ItemContainerStyle="{StaticResource TileSelectionStyle2}"
            IsSelectionEnabled="{Binding IsPlantSelectionEnabled, Mode=TwoWay}"
            SelectionChanged="PlantsSelector_SelectionChanged"
		    GridCellSize="198,272"
            LayoutMode="Grid"
            Margin="10,0,0,0"
            BorderBrush="{StaticResource GSAccentBrush}"
            Visibility="{Binding Plants.Count, Converter={StaticResource NonZeroToVisibility}}"
        />

    </Grid>

  

</local:GardenViewBase>